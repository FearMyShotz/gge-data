Object.defineProperty(exports, "__esModule", {
  value: true
});
var n = require("./2.js");
var o = function () {
  function TutorialClientCommands() {}
  TutorialClientCommands.InitTutorialClientCommands = function () {
    n.CommandController.instance.registerCommand(TutorialClientCommands.CONFIRM_WELCOME_TUTORIAL_ACTION_COMMAND, T.TutorialConfirmWelcomeCommand);
    n.CommandController.instance.registerCommand(TutorialClientCommands.CHOOSE_TO_SKIP_TUTORIAL_ACTION_COMMAND, a.TutorialAskToSkipTutorialCommand);
    n.CommandController.instance.registerCommand(TutorialClientCommands.CONFIRM_BUILD_BUILDING_TUTORIAL_ACTION_COMMAND, h.TutorialConfirmBuildBuildingCommand);
    n.CommandController.instance.registerCommand(TutorialClientCommands.BUILD_BUILDING_TUTORIAL_ACTION_COMMAND, r.TutorialBuildBuildingActionCommand);
    n.CommandController.instance.registerCommand(TutorialClientCommands.CONFIRM_UPGRADE_BUILDING_TUTORIAL_ACTION_COMMAND, I.TutorialConfirmUpgradeBuildingCommand);
    n.CommandController.instance.registerCommand(TutorialClientCommands.UPGRADE_BUILDING_TUTORIAL_ACTION_COMMAND, k.TutorialUpgradeBuildingActionCommand);
    n.CommandController.instance.registerCommand(TutorialClientCommands.FINISHED_UPGRADE_BUILDING_TUTORIAL_ACTION_COMMAND, x.TutorialFinishedUpgradeBuildingActionCommand);
    n.CommandController.instance.registerCommand(TutorialClientCommands.CONFIRM_EXPAND_CASTLE_TUTORIAL_ACTION_COMMAND, E.TutorialConfirmExpandCastleCommand);
    n.CommandController.instance.registerCommand(TutorialClientCommands.EXPAND_CASTLE_TUTORIAL_ACTION_COMMAND, S.TutorialExpandCastleActionCommand);
    n.CommandController.instance.registerCommand(TutorialClientCommands.FINISHED_EXPAND_CASTLE_TUTORIAL_ACTION_COMMAND, V.TutorialFinishedExpandCastleCommand);
    n.CommandController.instance.registerCommand(TutorialClientCommands.CONFIRM_COLLECT_TAX_TUTORIAL_ACTION_COMMAND, _.TutorialConfirmCollectTaxCommand);
    n.CommandController.instance.registerCommand(TutorialClientCommands.COLLECT_TAX_TUTORIAL_ACTION_COMMAND, d.TutorialCollectTaxActionCommand);
    n.CommandController.instance.registerCommand(TutorialClientCommands.CONFIRM_MAIN_TUTORIAL_FINISHED_ACTION_COMMAND, b.TutorialConfirmMainTutorialFinishedCommand);
    n.CommandController.instance.registerCommand(TutorialClientCommands.FINISHED_BUILD_BARRACKS_ACTION_COMMAND, L.TutorialFinishedBuildBarracksCommands);
    n.CommandController.instance.registerCommand(TutorialClientCommands.CONFIRM_RECRUIT_UNITS_TUTORIAL_ACTION_COMMAND, D.TutorialConfirmRecruitUnitsCommand);
    n.CommandController.instance.registerCommand(TutorialClientCommands.RECRUIT_UNITS_TUTORIAL_ACTION_COMMAND, F.TutorialRecruitUnitsCommand);
    n.CommandController.instance.registerCommand(TutorialClientCommands.CONFIRM_FOOD_REDUCTION_FOR_UNITS_TUTORIAL_ACTION_COMMAND, y.TutorialConfirmFoodReductionForUnitsCommand);
    n.CommandController.instance.registerCommand(TutorialClientCommands.CONFIRM_DECO_AND_PUBLIC_ORDER_TUTORIAL_ACTION_COMMAND, m.TutorialConfirmDecoAndPublicOrderCommand);
    n.CommandController.instance.registerCommand(TutorialClientCommands.FINISHED_DECO_AND_PUBLIC_ORDER_TUTORIAL_ACTION_COMMAND, R.TutorialFinishedDecoAndPublicOrderCommand);
    n.CommandController.instance.registerCommand(TutorialClientCommands.FINISHED_BUILD_WORKSHOP_TUTORIAL_ACTION_COMMAND, M.TutorialFinishedBuildWorkshopCommand);
    n.CommandController.instance.registerCommand(TutorialClientCommands.BUILD_SIEGE_TOOLS_TUTORIAL_ACTION_COMMAND, c.TutorialBuildSiegeToolsCommand);
    n.CommandController.instance.registerCommand(TutorialClientCommands.CONFIRM_ATTACK_ROBBER_BARON_TUTORIAL_ACTION_COMMAND, p.TutorialConfirmAttackRobberBaronCommand);
    n.CommandController.instance.registerCommand(TutorialClientCommands.ATTACK_ROBBER_BARON_TUTORIAL_ACTION_COMMAND, s.TutorialAttackRobberBaronCommand);
    n.CommandController.instance.registerCommand(TutorialClientCommands.FINISHED_ATTACK_ROBBER_BARON_TUTORIAL_ACTION_COMMAND, A.TutorialFinishedAttackRobberBaronCommand);
    n.CommandController.instance.registerCommand(TutorialClientCommands.READ_BATTLE_LOG_TUTORIAL_ACTION_COMMAND, B.TutorialReadBattleLogCommand);
    n.CommandController.instance.registerCommand(TutorialClientCommands.CONFIRM_CHOOSE_HERO_TUTORIAL_ACTION_COMMAND, C.TutorialConfirmChooseHeroCommand);
    n.CommandController.instance.registerCommand(TutorialClientCommands.CHOOSE_HERO_TUTORIAL_ACTION_COMMAND, u.TutorialChooseHeroCommand);
    n.CommandController.instance.registerCommand(TutorialClientCommands.FINISHED_BUILD_DEFENSE_WORKSHOP_TUTORIAL_ACTION_COMMAND, P.TutorialFinishedBuildDefenseWorkshopCommand);
    n.CommandController.instance.registerCommand(TutorialClientCommands.CONFIRM_BUILD_TOOLS_TUTORIAL_ACTION_COMMAND, g.TutorialConfirmBuildToolsCommand);
    n.CommandController.instance.registerCommand(TutorialClientCommands.BUILD_DEFENSE_TOOLS_TUTORIAL_ACTION_COMMAND, l.TutorialBuildDefenseToolsCommand);
    n.CommandController.instance.registerCommand(TutorialClientCommands.CONFIRM_EQUIP_DEFENSE_TUTORIAL_ACTION_COMMAND, O.TutorialConfirmEquipDefenseCommand);
    n.CommandController.instance.registerCommand(TutorialClientCommands.EQUIP_DEFENSE_TUTORIAL_ACTION_COMMAND, v.TutorialEquipDefenseCommand);
    n.CommandController.instance.registerCommand(TutorialClientCommands.CONFIRM_DEFENCE_EQUIPPED_TUTORIAL_ACTION_COMMAND, f.TutorialConfirmDefenceEquippedCommand);
    n.CommandController.instance.registerCommand(TutorialClientCommands.OPEN_QUESTBOOK, w.TutorialOpenQuestbookCommand);
    n.CommandController.instance.registerCommand(TutorialClientCommands.TRACK_GAME_JOINED, N.TutorialTrackGameJoinedCommand);
  };
  TutorialClientCommands.CONFIRM_WELCOME_TUTORIAL_ACTION_COMMAND = "confirmWelcome";
  TutorialClientCommands.CHOOSE_TO_SKIP_TUTORIAL_ACTION_COMMAND = "skipTutorial";
  TutorialClientCommands.CONFIRM_BUILD_BUILDING_TUTORIAL_ACTION_COMMAND = "confirmBuildBuilding";
  TutorialClientCommands.BUILD_BUILDING_TUTORIAL_ACTION_COMMAND = "buildBuilding";
  TutorialClientCommands.CONFIRM_UPGRADE_BUILDING_TUTORIAL_ACTION_COMMAND = "confirmUpgradeBuilding";
  TutorialClientCommands.UPGRADE_BUILDING_TUTORIAL_ACTION_COMMAND = "upgradeBuilding";
  TutorialClientCommands.FINISHED_UPGRADE_BUILDING_TUTORIAL_ACTION_COMMAND = "finishedUpgradeBuilding";
  TutorialClientCommands.CONFIRM_EXPAND_CASTLE_TUTORIAL_ACTION_COMMAND = "confirmExpandCastle";
  TutorialClientCommands.EXPAND_CASTLE_TUTORIAL_ACTION_COMMAND = "expandCastle";
  TutorialClientCommands.FINISHED_EXPAND_CASTLE_TUTORIAL_ACTION_COMMAND = "finishedExpandCastle";
  TutorialClientCommands.CONFIRM_COLLECT_TAX_TUTORIAL_ACTION_COMMAND = "confirmCollectTax";
  TutorialClientCommands.COLLECT_TAX_TUTORIAL_ACTION_COMMAND = "collectTax";
  TutorialClientCommands.CONFIRM_MAIN_TUTORIAL_FINISHED_ACTION_COMMAND = "confirmMainTutorialFinished";
  TutorialClientCommands.FINISHED_BUILD_BARRACKS_ACTION_COMMAND = "finishedBuildBarracksCommands";
  TutorialClientCommands.CONFIRM_RECRUIT_UNITS_TUTORIAL_ACTION_COMMAND = "confirmRecruitUnits";
  TutorialClientCommands.RECRUIT_UNITS_TUTORIAL_ACTION_COMMAND = "recruitUnits";
  TutorialClientCommands.CONFIRM_FOOD_REDUCTION_FOR_UNITS_TUTORIAL_ACTION_COMMAND = "confirmFoodReductionForUnits";
  TutorialClientCommands.CONFIRM_DECO_AND_PUBLIC_ORDER_TUTORIAL_ACTION_COMMAND = "confirmDecoAndPublicOrder";
  TutorialClientCommands.FINISHED_DECO_AND_PUBLIC_ORDER_TUTORIAL_ACTION_COMMAND = "finishedDecoAndPublicOrder";
  TutorialClientCommands.FINISHED_BUILD_WORKSHOP_TUTORIAL_ACTION_COMMAND = "finishedBuildWorkshop";
  TutorialClientCommands.BUILD_SIEGE_TOOLS_TUTORIAL_ACTION_COMMAND = "buildSiegeTools";
  TutorialClientCommands.CONFIRM_ATTACK_ROBBER_BARON_TUTORIAL_ACTION_COMMAND = "confirmAttackRobberBaron";
  TutorialClientCommands.ATTACK_ROBBER_BARON_TUTORIAL_ACTION_COMMAND = "attackRobberBaron";
  TutorialClientCommands.FINISHED_ATTACK_ROBBER_BARON_TUTORIAL_ACTION_COMMAND = "finishedAttackRobberBaron";
  TutorialClientCommands.READ_BATTLE_LOG_TUTORIAL_ACTION_COMMAND = "readBattleLog";
  TutorialClientCommands.CONFIRM_CHOOSE_HERO_TUTORIAL_ACTION_COMMAND = "confirmChooseHero";
  TutorialClientCommands.CHOOSE_HERO_TUTORIAL_ACTION_COMMAND = "chooseHero";
  TutorialClientCommands.FINISHED_BUILD_DEFENSE_WORKSHOP_TUTORIAL_ACTION_COMMAND = "finishedBuildDefenseWorkshop";
  TutorialClientCommands.CONFIRM_BUILD_TOOLS_TUTORIAL_ACTION_COMMAND = "confirmBuildTools";
  TutorialClientCommands.BUILD_DEFENSE_TOOLS_TUTORIAL_ACTION_COMMAND = "buildDefenseTools";
  TutorialClientCommands.CONFIRM_EQUIP_DEFENSE_TUTORIAL_ACTION_COMMAND = "confirmEquipDefenseTools";
  TutorialClientCommands.EQUIP_DEFENSE_TUTORIAL_ACTION_COMMAND = "equipDefenseTools";
  TutorialClientCommands.CONFIRM_DEFENCE_EQUIPPED_TUTORIAL_ACTION_COMMAND = "confirmDefenceEquipped";
  TutorialClientCommands.OPEN_QUESTBOOK = "openQuestbook";
  TutorialClientCommands.TRACK_GAME_JOINED = "trackGameJoined";
  return TutorialClientCommands;
}();
exports.TutorialClientCommands = o;
var a = require("./5672.js");
var s = require("./5675.js");
var r = require("./5677.js");
var l = require("./5678.js");
var c = require("./5679.js");
var u = require("./5680.js");
var d = require("./5681.js");
var p = require("./5682.js");
var h = require("./5683.js");
var g = require("./5684.js");
var C = require("./5685.js");
var _ = require("./5686.js");
var m = require("./5687.js");
var f = require("./5688.js");
var O = require("./5689.js");
var E = require("./5690.js");
var y = require("./5691.js");
var b = require("./5692.js");
var D = require("./5693.js");
var I = require("./5694.js");
var T = require("./5695.js");
var v = require("./5696.js");
var S = require("./5697.js");
var A = require("./5698.js");
var L = require("./5699.js");
var P = require("./5700.js");
var M = require("./5701.js");
var R = require("./5702.js");
var V = require("./5703.js");
var x = require("./5704.js");
var w = require("./5705.js");
var B = require("./5706.js");
var F = require("./5707.js");
var N = require("./5708.js");
var k = require("./5709.js");